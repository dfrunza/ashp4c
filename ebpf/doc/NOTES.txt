== XDP ==

ip link set dev eth0 xdp obj xdp-example.o
ip link set dev eth0 xdp obj xdp-example.o sec my_prog
ip link set dev eth0 xdp off

ip link add dev veth0 type veth peer name veth1
for i in {0..3}; do sudo ip link set dev veth$i xdp off; done

/* Debugging */
sudo echo 1 > /sys/kernel/debug/tracing/tracing_on
sudo cat /sys/kernel/debug/tracing/trace_pipe

The XDP kernel program should be compiled with -02, or else there's a chance that the BPF loader is going to reject it.

llvm-objdump -S -no-show-raw-insn xdp-example.o
readelf -a xde-example.o

'gnu/stubs-32.h' file not found
sudo apt-get install libc6-dev-i386

pkt=Ether(src="fc:75:16:8d:86:17",dst="1c:6f:65:2c:b5:3c")/IP(src="1.1.1.1",dst="2.2.2.2")/TCP(dport=1222,sport=1223)
pktv6=Ether(src="fc:75:16:8d:86:17",dst="1c:6f:65:2c:b5:3c")/IPv6(src="ff02::1",dst="ff02::2")/TCP(dport=1222,sport=1223)

pkt/=Raw("W"*(100-len(pkt)))

./xdp_redirect_user -S 61 10
=========================

#include <"net/if.h"> /* if_nametoindex */
static int ifindex = if_nametoindex("eth0");
if (bpf_set_link_xdp_fd(ifindex, prog_fd, xdp_flags) < 0) {
  printf("link set xdp fd failed\n");
  return EXIT_FAILURE;
}


== DPDK ==

wget https://fast.dpdk.org/rel/dpdk-20.02.tar.xz
wget http://dpdk.org/browse/apps/pktgen-dpdk/snapshot/pktgen-20.02.0.tar.gz

sudo apt-get install build-essential libnuma-dev pciutils libpcap-dev liblua5.3-dev libelf-dev

cd dpdk-20.02
export RTE_TARGET=x86_64-native-linuxapp-gcc
export RTE_SDK=/home/dumitru/dpdk-20.02
make config T=x86_64-native-linuxapp-gcc CONFIG_RTE_EAL_IGB_UIO=y
make install T=x86_64-native-linuxapp-gcc DESTDIR=install CONFIG_RTE_EAL_IGB_UIO=y

cd pktgen-20.02.0
export RTE_TARGET=x86_64-native-linuxapp-gcc
export RTE_SDK=/home/dumitru/dpdk-20.02
make

echo "huge        /mnt/huge   hugetlbfs defaults      0   0" >> /etc/fstab
sudo mkdir /mnt/huge
sudo chmod 777 /mnt/huge/
#sudo echo "vm.nr_hugepages=1024" >> /etc/sysctl.conf
sudo sysctl -w vm.nr_hugepages=1024
sudo sysctl -p
grep Huge /proc/meminfo

sudo modprobe uio
sudo modprobe vfio-pci
sudo modprobe uio_pci_generic
sudo insmod /home/dumitru/dpdk-20.02/install/lib/modules/4.15.0-88-generic/extra/dpdk/igb_uio.ko
sudo ./usertools/dpdk-devbind.py -s
sudo ./usertools/dpdk-devbind.py -b igb_uio 0000:0a:00.0
sudo ./app/x86_64-native-linuxapp-gcc/pktgen  -- -T -P -m "2.[0]"

ethtool -G enp5s0f0 rx 4096 tx 4096

# set 0 dst mac  e4:43:4b:53:51:83
# set 0 rate 1
# set 0 size 128
# start 0
# stop 0
